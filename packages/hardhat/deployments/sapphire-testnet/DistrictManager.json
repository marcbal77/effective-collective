{
  "address": "0x0ad9c17633Cc78d8EA37482103Ee1bAfEaFEB6b0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "checkMembership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposal",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            }
          ],
          "internalType": "struct DistrictManager.Vote[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ping",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_members",
          "type": "address[]"
        }
      ],
      "name": "restartDemo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xab037407c828314530f505be793a1c830d6397c8a047774113688d8f0444a157",
  "receipt": {
    "to": null,
    "from": "0x142Ab00310aaCB3E27bf06c5cB9eEbf6116b0E51",
    "contractAddress": "0x0ad9c17633Cc78d8EA37482103Ee1bAfEaFEB6b0",
    "transactionIndex": 0,
    "gasUsed": "940404",
    "logsBloom": "0x
    "blockHash": "0x557391ebd9ee74fc05c27db09e7f33204e3447b5e90cae16a7857d58116a0964",
    "transactionHash": "0xab037407c828314530f505be793a1c830d6397c8a047774113688d8f0444a157",
    "logs": [],
    "blockNumber": 5149641,
    "cumulativeGasUsed": "940404",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "424ed90e4b1969086007959fad0f264e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"checkMembership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"}],\"internalType\":\"struct DistrictManager.Vote[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"restartDemo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proposal.sol\":\"DistrictManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Proposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IDistrictManager {\\n    function checkMembership(address _addr) external view returns (bool);\\n}\\n// this is set up specifically for yes/no proposals\\n// Note: should we have the opportunity/time, it would make a lot of sense to have a parent Proposal contract and then other contract types\\n// that inherit from Proposal (they wouldnt be very different from one another, after all)\\ncontract Proposal {\\n    /* Following properties are variables that would be set by the Proposal Management contract (should we end up coding that) */\\n    // for the record, we could pass them into the constructor when deploying the contracts, as well, but saving effort for now\\n   \\n    // how many votes must be in favor for the vote to pass\\n    uint8 threshhold;\\n\\n    // times are done in uint form as number of seconds since 1-1-1970\\n    uint deadline;\\n\\n    /* Properties to track votes */\\n\\n    // the record of IF someone has voted. (Not what their vote was)\\n    mapping(address => bool) vote_record;\\n\\n    // for the yes/no type of vote, only two options: true (yes) or false (no)\\n    // other types of votes would likely need names to differentiate\\n    mapping(bool => uint8) vote_count;\\n\\n    IDistrictManager district;\\n\\n    constructor(uint _deadline, uint8 _threshhold, address _district) {\\n        deadline = _deadline;\\n        threshhold = _threshhold;\\n        district = IDistrictManager(_district);\\n    }\\n\\n    function recordVote (bool vote) external {\\n        //make sure the sender is allowed to vote\\n        require(district.checkMembership(msg.sender));\\n        \\n        //make sure the sender has not already voted\\n        require(!vote_record[msg.sender]);\\n\\n        //ensure deadline hasn't passed\\n        require(block.timestamp <= deadline);\\n\\n        //record the sender's vote\\n        vote_count[vote] = vote_count[vote] + 1;\\n\\n        //record that they have voted\\n        vote_record[msg.sender] = true;\\n    }\\n\\n    function hasVoted(address addr_) external view returns (bool) {\\n        return vote_record[addr_];\\n    }\\n}\\n\\ncontract DistrictManager is IDistrictManager {\\n    struct Vote {\\n        string name;\\n        string description;\\n        address proposal;\\n        bool hasVoted;\\n    }\\n\\n    mapping(address=>bool) membership;\\n    address[] members;\\n\\n    Vote[] votes;\\n\\n    constructor() {}\\n\\n    function restartDemo(address[] memory _members) external {\\n        // clear current members of their membership\\n        for(uint8 i = 0; i < members.length; i++){\\n            membership[members[i]] = false;\\n        }\\n\\n        // clear current members list\\n        delete members;\\n        // clear existing proposals\\n        delete votes;\\n\\n        // add new members\\n        for(uint8 i = 0; i < _members.length; i++){\\n            membership[_members[i]] = true;\\n            members.push(_members[i]);\\n        }\\n\\n\\n\\n        // create test proposals\\n        createProposal(\\\"Change website color to blue\\\", \\n                       \\\"The background is awful; let's make it better\\\",\\n                       block.timestamp + 1209600,\\n                       0);\\n        createProposal(\\\"Change DAO name Vincent Van Dao\\\", \\n                       \\\"People like puns more than they like rhymes\\\",\\n                       block.timestamp + 1209600,\\n                       0);\\n    }\\n\\n    function createProposal(string memory _name, string memory _description, uint _deadline, uint8 _threshhold) internal {\\n        uint8 threshhold = _threshhold == 0 ? (uint8)(members.length)/2 : _threshhold;\\n\\n        Vote memory newVote;\\n        newVote.name = _name;\\n        newVote.description = _description;\\n        newVote.proposal = address(new Proposal(_deadline, threshhold, address(this)));\\n        votes.push(newVote);\\n    } \\n\\n    function getProposals() external view returns (Vote[] memory){\\n        Vote[] memory votes_ = new Vote[](votes.length);\\n        for (uint8 i = 0; i < votes.length; i++) {\\n            Vote storage vote_ = votes[i];\\n            votes_[i] = vote_;\\n            votes_[i].hasVoted = ((Proposal)(vote_.proposal)).hasVoted(msg.sender);\\n        }\\n        return votes_;\\n    }\\n\\n    function checkMembership(address _addr) external view returns (bool) {\\n        return membership[_addr];\\n    }\\n\\n    function ping() external pure returns (string memory) {\\n        return \\\"hello\\\";\\n    }\\n}\",\"keccak256\":\"0xc78cce9aa3b3f7c27c0b87764e50a297de1e660f898c38ff52740e5587160945\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ff6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063367a66ac146100515780635c36b186146100665780635fb64fd61461009657806362564c48146100d2575b600080fd5b61006461005f36600461084d565b6100e7565b005b604080518082018252600581526468656c6c6f60d81b6020820152905161008d9190610958565b60405180910390f35b6100c26100a4366004610972565b6001600160a01b031660009081526020819052604090205460ff1690565b604051901515815260200161008d565b6100da610306565b60405161008d919061098d565b60005b60015460ff8216101561015857600080600060018460ff168154811061011257610112610a33565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061015081610a5f565b9150506100ea565b506101656001600061073f565b6101716002600061075d565b60005b81518160ff16101561023d576001600080848460ff168151811061019a5761019a610a33565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506001828260ff16815181106101f0576101f0610a33565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061023581610a5f565b915050610174565b506102a46040518060400160405280601c81526020017f4368616e6765207765627369746520636f6c6f7220746f20626c7565000000008152506040518060600160405280602d8152602001610f94602d913961029d4262127500610a7e565b60006105e3565b6103036040518060400160405280601f81526020017f4368616e67652044414f206e616d652056696e63656e742056616e2044616f008152506040518060600160405280602b8152602001610f69602b913961029d4262127500610a7e565b50565b60025460609060009067ffffffffffffffff8111156103275761032761081b565b60405190808252806020026020018201604052801561037c57816020015b6040805160808101825260608082526020820181905260009282018390528101919091528152602001906001900390816103455790505b50905060005b60025460ff821610156105dd57600060028260ff16815481106103a7576103a7610a33565b90600052602060002090600302019050806040518060800160405290816000820180546103d390610a97565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90610a97565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b5050505050815260200160018201805461046590610a97565b80601f016020809104026020016040519081016040528092919081815260200182805461049190610a97565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050509183525050600291909101546001600160a01b038116602083015260ff600160a01b9091048116151560409092019190915284518591851690811061052857610528610a33565b602090810291909101015260028101546040516304f77a1f60e11b81523360048201526001600160a01b03909116906309eef43e90602401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610acb565b838360ff16815181106105b6576105b6610a33565b602090810291909101015190151560609091015250806105d581610a5f565b915050610382565b50919050565b600060ff8216156105f45781610603565b60015461060390600290610aed565b905061063b6040518060800160405280606081526020016060815260200160006001600160a01b031681526020016000151581525090565b858152602081018590526040518490839030906106579061077e565b92835260ff90911660208301526001600160a01b03166040820152606001604051809103906000f080158015610691573d6000803e3d6000fd5b506001600160a01b0316604082015260028054600181018255600091909152815182916003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906106e69082610b6c565b50602082015160018201906106fb9082610b6c565b506040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055505050505050565b5080546000825590600052602060002090810190610303919061078b565b508054600082556003029060005260206000209081019061030391906107a4565b61033c80610c2d83390190565b5b808211156107a0576000815560010161078c565b5090565b808211156107a05760006107b882826107e1565b6107c66001830160006107e1565b506002810180546001600160a81b03191690556003016107a4565b5080546107ed90610a97565b6000825580601f106107fd575050565b601f016020900490600052602060002090810190610303919061078b565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461084857600080fd5b919050565b6000602080838503121561086057600080fd5b823567ffffffffffffffff8082111561087857600080fd5b818501915085601f83011261088c57600080fd5b81358181111561089e5761089e61081b565b8060051b604051601f19603f830116810181811085821117156108c3576108c361081b565b6040529182528482019250838101850191888311156108e157600080fd5b938501935b82851015610906576108f785610831565b845293850193928501926108e6565b98975050505050505050565b6000815180845260005b818110156109385760208185018101518683018201520161091c565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061096b6020830184610912565b9392505050565b60006020828403121561098457600080fd5b61096b82610831565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a2557603f198984030185528151608081518186526109da82870182610912565b915050888201518582038a8701526109f28282610912565b838a01516001600160a01b0316878b015260609384015115159390960192909252505093860193908601906001016109b4565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610a7557610a75610a49565b60010192915050565b80820180821115610a9157610a91610a49565b92915050565b600181811c90821680610aab57607f821691505b6020821081036105dd57634e487b7160e01b600052602260045260246000fd5b600060208284031215610add57600080fd5b8151801515811461096b57600080fd5b600060ff831680610b0e57634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b601f821115610b6757600081815260208120601f850160051c81016020861015610b445750805b601f850160051c820191505b81811015610b6357828155600101610b50565b5050505b505050565b815167ffffffffffffffff811115610b8657610b8661081b565b610b9a81610b948454610a97565b84610b1d565b602080601f831160018114610bcf5760008415610bb75750858301515b600019600386901b1c1916600185901b178555610b63565b600085815260208120601f198616915b82811015610bfe57888601518255948401946001909101908401610bdf565b5085821015610c1c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe608060405234801561001057600080fd5b5060405161033c38038061033c83398101604081905261002f9161006d565b6001929092556000805460ff191660ff92909216919091179055600480546001600160a01b0319166001600160a01b039092169190911790556100c2565b60008060006060848603121561008257600080fd5b83519250602084015160ff8116811461009a57600080fd5b60408501519092506001600160a01b03811681146100b757600080fd5b809150509250925092565b61026b806100d16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309eef43e1461003b578063d64ee2381461007b575b600080fd5b61006761004936600461018d565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200160405180910390f35b61008e6100893660046101ce565b610090565b005b60048054604051632fdb27eb60e11b815233928101929092526001600160a01b031690635fb64fd690602401602060405180830381865afa1580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd91906101eb565b61010657600080fd5b3360009081526002602052604090205460ff161561012357600080fd5b60015442111561013257600080fd5b8015156000908152600360205260409020546101529060ff166001610208565b9015156000908152600360209081526040808320805460ff9590951660ff199586161790553383526002909152902080549091166001179055565b60006020828403121561019f57600080fd5b81356001600160a01b03811681146101b657600080fd5b9392505050565b80151581146101cb57600080fd5b50565b6000602082840312156101e057600080fd5b81356101b6816101bd565b6000602082840312156101fd57600080fd5b81516101b6816101bd565b60ff818116838216019081111561022f57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122070840a1e99bc2020a4ff6845c3ddfdd4a1d9bfa2b7178fa8440669285da5ece264736f6c6343000811003350656f706c65206c696b652070756e73206d6f7265207468616e2074686579206c696b65207268796d6573546865206261636b67726f756e6420697320617766756c3b206c65742773206d616b6520697420626574746572a26469706673582212201da3a67de61c2fa475a9b8459a2157fe489313281d2996431a10254caf2d8efc64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063367a66ac146100515780635c36b186146100665780635fb64fd61461009657806362564c48146100d2575b600080fd5b61006461005f36600461084d565b6100e7565b005b604080518082018252600581526468656c6c6f60d81b6020820152905161008d9190610958565b60405180910390f35b6100c26100a4366004610972565b6001600160a01b031660009081526020819052604090205460ff1690565b604051901515815260200161008d565b6100da610306565b60405161008d919061098d565b60005b60015460ff8216101561015857600080600060018460ff168154811061011257610112610a33565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061015081610a5f565b9150506100ea565b506101656001600061073f565b6101716002600061075d565b60005b81518160ff16101561023d576001600080848460ff168151811061019a5761019a610a33565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506001828260ff16815181106101f0576101f0610a33565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061023581610a5f565b915050610174565b506102a46040518060400160405280601c81526020017f4368616e6765207765627369746520636f6c6f7220746f20626c7565000000008152506040518060600160405280602d8152602001610f94602d913961029d4262127500610a7e565b60006105e3565b6103036040518060400160405280601f81526020017f4368616e67652044414f206e616d652056696e63656e742056616e2044616f008152506040518060600160405280602b8152602001610f69602b913961029d4262127500610a7e565b50565b60025460609060009067ffffffffffffffff8111156103275761032761081b565b60405190808252806020026020018201604052801561037c57816020015b6040805160808101825260608082526020820181905260009282018390528101919091528152602001906001900390816103455790505b50905060005b60025460ff821610156105dd57600060028260ff16815481106103a7576103a7610a33565b90600052602060002090600302019050806040518060800160405290816000820180546103d390610a97565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90610a97565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b5050505050815260200160018201805461046590610a97565b80601f016020809104026020016040519081016040528092919081815260200182805461049190610a97565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050509183525050600291909101546001600160a01b038116602083015260ff600160a01b9091048116151560409092019190915284518591851690811061052857610528610a33565b602090810291909101015260028101546040516304f77a1f60e11b81523360048201526001600160a01b03909116906309eef43e90602401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610acb565b838360ff16815181106105b6576105b6610a33565b602090810291909101015190151560609091015250806105d581610a5f565b915050610382565b50919050565b600060ff8216156105f45781610603565b60015461060390600290610aed565b905061063b6040518060800160405280606081526020016060815260200160006001600160a01b031681526020016000151581525090565b858152602081018590526040518490839030906106579061077e565b92835260ff90911660208301526001600160a01b03166040820152606001604051809103906000f080158015610691573d6000803e3d6000fd5b506001600160a01b0316604082015260028054600181018255600091909152815182916003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906106e69082610b6c565b50602082015160018201906106fb9082610b6c565b506040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055505050505050565b5080546000825590600052602060002090810190610303919061078b565b508054600082556003029060005260206000209081019061030391906107a4565b61033c80610c2d83390190565b5b808211156107a0576000815560010161078c565b5090565b808211156107a05760006107b882826107e1565b6107c66001830160006107e1565b506002810180546001600160a81b03191690556003016107a4565b5080546107ed90610a97565b6000825580601f106107fd575050565b601f016020900490600052602060002090810190610303919061078b565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461084857600080fd5b919050565b6000602080838503121561086057600080fd5b823567ffffffffffffffff8082111561087857600080fd5b818501915085601f83011261088c57600080fd5b81358181111561089e5761089e61081b565b8060051b604051601f19603f830116810181811085821117156108c3576108c361081b565b6040529182528482019250838101850191888311156108e157600080fd5b938501935b82851015610906576108f785610831565b845293850193928501926108e6565b98975050505050505050565b6000815180845260005b818110156109385760208185018101518683018201520161091c565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061096b6020830184610912565b9392505050565b60006020828403121561098457600080fd5b61096b82610831565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a2557603f198984030185528151608081518186526109da82870182610912565b915050888201518582038a8701526109f28282610912565b838a01516001600160a01b0316878b015260609384015115159390960192909252505093860193908601906001016109b4565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610a7557610a75610a49565b60010192915050565b80820180821115610a9157610a91610a49565b92915050565b600181811c90821680610aab57607f821691505b6020821081036105dd57634e487b7160e01b600052602260045260246000fd5b600060208284031215610add57600080fd5b8151801515811461096b57600080fd5b600060ff831680610b0e57634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b601f821115610b6757600081815260208120601f850160051c81016020861015610b445750805b601f850160051c820191505b81811015610b6357828155600101610b50565b5050505b505050565b815167ffffffffffffffff811115610b8657610b8661081b565b610b9a81610b948454610a97565b84610b1d565b602080601f831160018114610bcf5760008415610bb75750858301515b600019600386901b1c1916600185901b178555610b63565b600085815260208120601f198616915b82811015610bfe57888601518255948401946001909101908401610bdf565b5085821015610c1c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe608060405234801561001057600080fd5b5060405161033c38038061033c83398101604081905261002f9161006d565b6001929092556000805460ff191660ff92909216919091179055600480546001600160a01b0319166001600160a01b039092169190911790556100c2565b60008060006060848603121561008257600080fd5b83519250602084015160ff8116811461009a57600080fd5b60408501519092506001600160a01b03811681146100b757600080fd5b809150509250925092565b61026b806100d16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309eef43e1461003b578063d64ee2381461007b575b600080fd5b61006761004936600461018d565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200160405180910390f35b61008e6100893660046101ce565b610090565b005b60048054604051632fdb27eb60e11b815233928101929092526001600160a01b031690635fb64fd690602401602060405180830381865afa1580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd91906101eb565b61010657600080fd5b3360009081526002602052604090205460ff161561012357600080fd5b60015442111561013257600080fd5b8015156000908152600360205260409020546101529060ff166001610208565b9015156000908152600360209081526040808320805460ff9590951660ff199586161790553383526002909152902080549091166001179055565b60006020828403121561019f57600080fd5b81356001600160a01b03811681146101b657600080fd5b9392505050565b80151581146101cb57600080fd5b50565b6000602082840312156101e057600080fd5b81356101b6816101bd565b6000602082840312156101fd57600080fd5b81516101b6816101bd565b60ff818116838216019081111561022f57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122070840a1e99bc2020a4ff6845c3ddfdd4a1d9bfa2b7178fa8440669285da5ece264736f6c6343000811003350656f706c65206c696b652070756e73206d6f7265207468616e2074686579206c696b65207268796d6573546865206261636b67726f756e6420697320617766756c3b206c65742773206d616b6520697420626574746572a26469706673582212201da3a67de61c2fa475a9b8459a2157fe489313281d2996431a10254caf2d8efc64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 122,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "membership",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 125,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "members",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 129,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "votes",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Vote)118_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Vote)118_storage)dyn_storage": {
        "base": "t_struct(Vote)118_storage",
        "encoding": "dynamic_array",
        "label": "struct DistrictManager.Vote[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Vote)118_storage": {
        "encoding": "inplace",
        "label": "struct DistrictManager.Vote",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 113,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 115,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "proposal",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 117,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "hasVoted",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}