{
  "address": "0xcCCBCd88094E9e378C44967DFcA02544B5835f39",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "checkMembership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposal",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            }
          ],
          "internalType": "struct DistrictManager.VoteInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ping",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_members",
          "type": "address[]"
        }
      ],
      "name": "restartDemo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcab01bf77ed91ff68a89b211031eeac54d8ca78c8693e12852548f406a57a94e",
  "receipt": {
    "to": null,
    "from": "0x142Ab00310aaCB3E27bf06c5cB9eEbf6116b0E51",
    "contractAddress": "0xcCCBCd88094E9e378C44967DFcA02544B5835f39",
    "transactionIndex": 0,
    "gasUsed": "949401",
    "logsBloom": "0x
    "blockHash": "0x523bfa61ebdacf6cd24032204a958c0439d94d395bf656edb0a0785e32d76d49",
    "transactionHash": "0xcab01bf77ed91ff68a89b211031eeac54d8ca78c8693e12852548f406a57a94e",
    "logs": [],
    "blockNumber": 5151961,
    "cumulativeGasUsed": "949401",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "758c685f2a76ddbeebbff7bb34fca724",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"checkMembership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotes\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"}],\"internalType\":\"struct DistrictManager.VoteInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"restartDemo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proposal.sol\":\"DistrictManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Proposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// So that the Votes can check membership of the sender\\n// membership is under the district's jurisdiction\\ninterface IDistrictManager {\\n    function checkMembership(address _addr) external view returns (bool);\\n}\\n\\nabstract contract Vote {\\n    // times are done in uint form as number of seconds since 1-1-1970\\n    uint deadline;\\n    IDistrictManager district;\\n\\n    constructor(uint _deadline, address _district) {\\n        deadline = _deadline;\\n        district = IDistrictManager(_district);\\n    }\\n\\n    function verifyVote() internal view {\\n        //make sure the sender is allowed to vote\\n        require(district.checkMembership(msg.sender));\\n\\n        //ensure deadline hasn't passed\\n        require(block.timestamp <= deadline);\\n    }\\n\\n    function hasVoted(address addr_) external virtual returns (bool) { }\\n}\\n\\ncontract Proposal is Vote {\\n    // how many votes must be in favor for the vote to pass\\n    uint8 threshhold;\\n    // the record of IF someone has voted. (Not what their vote was)\\n    mapping(address => bool) private vote_record;\\n    // for the Propsal type of vote, only two options: true (yes) or false (no)\\n    mapping(bool => uint8) private vote_count;\\n    \\n    constructor(uint _deadline, address _district, uint8 _threshhold) \\n    Vote(_deadline, _district){\\n        threshhold = _threshhold;\\n    }\\n\\n    function recordVote (bool vote) external returns (bool) {\\n        verifyVote();\\n\\n        //make sure the sender has not already voted\\n        require(!vote_record[msg.sender]);\\n\\n        //record the sender's vote\\n        vote_count[vote] = vote_count[vote] + 1;\\n        //record that they have voted\\n        vote_record[msg.sender] = true;\\n\\n        // for the sake of MVP, when the vote passes the threshhold, we return true\\n        return (vote_count[vote] >= threshhold);\\n    }\\n\\n     function hasVoted(address addr_) external view override virtual returns (bool) {\\n        return vote_record[addr_];\\n    }\\n}\\n\\n\\ncontract DistrictManager is IDistrictManager {\\n    struct VoteInfo {\\n        string name;\\n        string description;\\n        address proposal;\\n        bool hasVoted;\\n    }\\n\\n    mapping(address=>bool) membership;\\n    address[] members;\\n\\n    VoteInfo[] votes;\\n\\n    constructor() {}\\n\\n    function restartDemo(address[] memory _members) external {\\n        // clear current members of their membership\\n        for(uint8 i = 0; i < members.length; i++){\\n            membership[members[i]] = false;\\n        }\\n\\n        // clear current members list\\n        delete members;\\n        // clear existing proposals\\n        delete votes;\\n\\n        // add new members\\n        for(uint8 i = 0; i < _members.length; i++){\\n            membership[_members[i]] = true;\\n            members.push(_members[i]);\\n        }\\n\\n        // create test proposals\\n        createProposal(\\\"Change website color to blue\\\", \\n                       \\\"The background is awful; let's make it better\\\",\\n                       block.timestamp + 1209600,\\n                       1);\\n        createProposal(\\\"Change DAO name Vincent Van Dao\\\", \\n                       \\\"People like puns more than they like rhymes\\\",\\n                       block.timestamp + 1209600,\\n                       0);\\n    }\\n\\n    function createProposal(string memory _name, string memory _description, uint _deadline, uint8 _threshhold) internal {\\n        uint8 threshhold = _threshhold == 0 ? (uint8)(members.length)/2 : _threshhold;\\n\\n        VoteInfo memory newVote;\\n        newVote.name = _name;\\n        newVote.description = _description;\\n        newVote.proposal = address(new Proposal(_deadline, address(this), threshhold));\\n        votes.push(newVote);\\n    } \\n\\n    function getVotes() external returns (VoteInfo[] memory){\\n        VoteInfo[] memory votes_ = new VoteInfo[](votes.length);\\n        for (uint8 i = 0; i < votes.length; i++) {\\n            VoteInfo storage vote_ = votes[i];\\n            votes_[i] = vote_;\\n            votes_[i].hasVoted = ((Vote)(vote_.proposal)).hasVoted(msg.sender);\\n        }\\n        return votes_;\\n    }\\n\\n    function checkMembership(address _addr) external view returns (bool) {\\n        return membership[_addr];\\n    }\\n\\n    function ping() external pure returns (string memory) {\\n        return \\\"hello\\\";\\n    }\\n}\",\"keccak256\":\"0x9bc43955bc9efef323b1f88db9e0c4142e4037855b6cca793b2a874ba330a42b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dc9601514610051578063367a66ac1461006f5780635c36b186146100845780635fb64fd6146100ab575b600080fd5b6100596100e7565b604051610066919061086a565b60405180910390f35b61008261007d366004610942565b6103c6565b005b604080518082018252600581526468656c6c6f60d81b602082015290516100669190610a07565b6100d76100b9366004610a21565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610066565b60025460609060009067ffffffffffffffff81111561010857610108610910565b60405190808252806020026020018201604052801561015d57816020015b6040805160808101825260608082526020820181905260009282018390528101919091528152602001906001900390816101265790505b50905060005b60025460ff821610156103c057600060028260ff168154811061018857610188610a3c565b90600052602060002090600302019050806040518060800160405290816000820180546101b490610a52565b80601f01602080910402602001604051908101604052809291908181526020018280546101e090610a52565b801561022d5780601f106102025761010080835404028352916020019161022d565b820191906000526020600020905b81548152906001019060200180831161021057829003601f168201915b5050505050815260200160018201805461024690610a52565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610a52565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050509183525050600291909101546001600160a01b038116602083015260ff600160a01b9091048116151560409092019190915284518591851690811061030957610309610a3c565b602090810291909101015260028101546040516304f77a1f60e11b81523360048201526001600160a01b03909116906309eef43e906024016020604051808303816000875af1158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610a86565b838360ff168151811061039957610399610a3c565b602090810291909101015190151560609091015250806103b881610abe565b915050610163565b50919050565b60005b60015460ff8216101561043757600080600060018460ff16815481106103f1576103f1610a3c565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061042f81610abe565b9150506103c9565b5061044460016000610748565b61045060026000610766565b60005b81518160ff16101561051c576001600080848460ff168151811061047957610479610a3c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506001828260ff16815181106104cf576104cf610a3c565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061051481610abe565b915050610453565b506105836040518060400160405280601c81526020017f4368616e6765207765627369746520636f6c6f7220746f20626c7565000000008152506040518060600160405280602d8152602001610fbd602d913961057c4262127500610add565b60016105ec565b6105e96040518060400160405280601f81526020017f4368616e67652044414f206e616d652056696e63656e742056616e2044616f008152506040518060600160405280602b8152602001610f92602b91396105e24262127500610add565b60006105ec565b50565b600060ff8216156105fd578161060c565b60015461060c90600290610af6565b90506106446040518060800160405280606081526020016060815260200160006001600160a01b031681526020016000151581525090565b8581526020810185905260405184903090849061066090610787565b9283526001600160a01b03909116602083015260ff166040820152606001604051809103906000f08015801561069a573d6000803e3d6000fd5b506001600160a01b0316604082015260028054600181018255600091909152815182916003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906106ef9082610b75565b50602082015160018201906107049082610b75565b506040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055505050505050565b50805460008255906000526020600020908101906105e99190610794565b50805460008255600302906000526020600020908101906105e991906107ad565b61035c80610c3683390190565b5b808211156107a95760008155600101610795565b5090565b808211156107a95760006107c182826107ea565b6107cf6001830160006107ea565b506002810180546001600160a81b03191690556003016107ad565b5080546107f690610a52565b6000825580601f10610806575050565b601f0160209004906000526020600020908101906105e99190610794565b6000815180845260005b8181101561084a5760208185018101518683018201520161082e565b506000602082860101526020601f19601f83011685010191505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561090257603f198984030185528151608081518186526108b782870182610824565b915050888201518582038a8701526108cf8282610824565b838a01516001600160a01b0316878b01526060938401511515939096019290925250509386019390860190600101610891565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461093d57600080fd5b919050565b6000602080838503121561095557600080fd5b823567ffffffffffffffff8082111561096d57600080fd5b818501915085601f83011261098157600080fd5b81358181111561099357610993610910565b8060051b604051601f19603f830116810181811085821117156109b8576109b8610910565b6040529182528482019250838101850191888311156109d657600080fd5b938501935b828510156109fb576109ec85610926565b845293850193928501926109db565b98975050505050505050565b602081526000610a1a6020830184610824565b9392505050565b600060208284031215610a3357600080fd5b610a1a82610926565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610a6657607f821691505b6020821081036103c057634e487b7160e01b600052602260045260246000fd5b600060208284031215610a9857600080fd5b81518015158114610a1a57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610ad457610ad4610aa8565b60010192915050565b80820180821115610af057610af0610aa8565b92915050565b600060ff831680610b1757634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b601f821115610b7057600081815260208120601f850160051c81016020861015610b4d5750805b601f850160051c820191505b81811015610b6c57828155600101610b59565b5050505b505050565b815167ffffffffffffffff811115610b8f57610b8f610910565b610ba381610b9d8454610a52565b84610b26565b602080601f831160018114610bd85760008415610bc05750858301515b600019600386901b1c1916600185901b178555610b6c565b600085815260208120601f198616915b82811015610c0757888601518255948401946001909101908401610be8565b5085821015610c255787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe608060405234801561001057600080fd5b5060405161035c38038061035c83398101604081905261002f9161006a565b6000929092556001805460ff909316600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790556100c0565b60008060006060848603121561007f57600080fd5b835160208501519093506001600160a01b038116811461009e57600080fd5b604085015190925060ff811681146100b557600080fd5b809150509250925092565b61028d806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309eef43e1461003b578063d64ee2381461007b575b600080fd5b6100676100493660046101af565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200160405180910390f35b6100676100893660046101f0565b6000610093610129565b3360009081526002602052604090205460ff16156100b057600080fd5b8115156000908152600360205260409020546100d09060ff16600161020d565b9115156000818152600360208181526040808420805460ff98891660ff1991821617825533865260028452918520805490921660019081179092559054949093525254600160a01b909104831692169190911015919050565b600154604051632fdb27eb60e11b81523360048201526001600160a01b0390911690635fb64fd690602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610195919061023a565b61019e57600080fd5b6000544211156101ad57600080fd5b565b6000602082840312156101c157600080fd5b81356001600160a01b03811681146101d857600080fd5b9392505050565b80151581146101ed57600080fd5b50565b60006020828403121561020257600080fd5b81356101d8816101df565b60ff818116838216019081111561023457634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561024c57600080fd5b81516101d8816101df56fea2646970667358221220e120f2c6f76e8f315761736c3892245f7c8740a5ccb482620498686270730f6664736f6c6343000811003350656f706c65206c696b652070756e73206d6f7265207468616e2074686579206c696b65207268796d6573546865206261636b67726f756e6420697320617766756c3b206c65742773206d616b6520697420626574746572a264697066735822122090008548db29a5260496fd2594a9c961bb74bdf59b7e1caf7643efc59023bc4f64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 162,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "membership",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 165,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "members",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 169,
        "contract": "contracts/Proposal.sol:DistrictManager",
        "label": "votes",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(VoteInfo)158_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(VoteInfo)158_storage)dyn_storage": {
        "base": "t_struct(VoteInfo)158_storage",
        "encoding": "dynamic_array",
        "label": "struct DistrictManager.VoteInfo[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(VoteInfo)158_storage": {
        "encoding": "inplace",
        "label": "struct DistrictManager.VoteInfo",
        "members": [
          {
            "astId": 151,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 153,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 155,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "proposal",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 157,
            "contract": "contracts/Proposal.sol:DistrictManager",
            "label": "hasVoted",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}